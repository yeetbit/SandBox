#!/bin/zsh
rm -rf target
rm -f dotjava
rm -f dotclass
# implement easy to use build tool/script 

# type default: .class target/classes, .jar target/jars, bin target/bin
# verbosity: default = verbose

# usage:
# - arg0[define main()] arg1[build-template-number] arg2[noconfirm, silent]
# - compile in temp dir
# - review compiletime, return errors
# - review runtime, return error
# - if(noerror) compile? y/n n=exit
# - if(proceed) use build-template? select/n n=nextstep
# - if(proceed) show build options toggle-menu[target, manifest, compile/run -time options, native build config]
# - if(proceed) build as specified


# jar archiver usage
# -c create new archive
# -t list table of contents for archive
# -x extract named (or all) files from archive
# -u update existing archive
# -v generate verbose output on standard output
# -f specify archive file name
# -m include manifest information from specified manifest file
# -0 store only; use no ZIP compression
# -M do not create a manifest file for the entries
# -i generate index information for the specified jar files
# -C change to the specified directory and include the following file
# If any file is a directory then it is processed recursively.
# The manifest file name and the archive file name needs to be specified
# in the same order the 'm' and 'f' flags are specified.

# java -cp target/classes/. Main		before I forget again, this runs plain classes 

echo " "
echo "start autobuild"
echo " "
echo "compiling without verbose messaging..."
echo " "
echo "-------------"
echo " "
find -name "*.java" > dotjava
javac -Xlint:all @dotjava -d target/classes

#javac -Xlint:unchecked -cp src/main/java/. src/main/java/Main.java src/main/java/sandbox/testing/*.java src/main/java/testing/instantiableObjects/*.java -d target/classes

echo " "
echo "-------------"
echo " "
# echo "if noerror during compilation, starting jar archive..."
# echo " "
# mkdir target/jars/
# find -name "*.class"  | awk '{ print substr ($0, 3 ) }' > dotclass
# jar -cfm target/jars/sandbox.jar Manifest.txt -C @dotclass
echo " "
echo "exit autobuild"
echo " "
